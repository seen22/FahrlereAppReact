{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["coordinates","stop","lat","lng","rechtsabbiegen","rechtsabbiegenMehrspurig","bahnübergang","linksabbiegen","linksabbiegenMehrspurig","gangWählen","fahrradschutzstreifen","fahrradÜberholen","eingangsorfschaft","geschwindigkeitsanpassung","App","currentView","setCurrentView","useState","selectedCoordinates","setSelectedCoordinates","useEffect","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","catch","registrationError","handleViewChange","view","handleBack","_jsxs","className","children","_Fragment","onClick","_jsx","xmlns","viewBox","d","type","placeholder","Object","keys","map","key","charAt","toUpperCase","slice","replace","onChange","e","handleSelectChange","event","prevState","value","class","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.867f4ac5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst coordinates = {\r\n  stop: { lat: 52.5200, lng: 13.4050 },\r\n  rechtsabbiegen: { lat: 48.8566, lng: 2.3522 },\r\n  rechtsabbiegenMehrspurig: { lat: 40.7128, lng: -74.0060 },\r\n  bahnübergang: { lat: 34.0522, lng: -118.2437 },\r\n  linksabbiegen: { lat: 51.5074, lng: -0.1278 },\r\n  linksabbiegenMehrspurig: { lat: 35.6895, lng: 139.6917 },\r\n  gangWählen: { lat: 55.7558, lng: 37.6173 },\r\n  fahrradschutzstreifen: { lat: 37.7749, lng: -122.4194 },\r\n  fahrradÜberholen: { lat: 28.6139, lng: 77.2090 },\r\n  eingangsorfschaft: { lat: -33.8688, lng: 151.2093 },\r\n  geschwindigkeitsanpassung: { lat: 41.9028, lng: 12.4964 }\r\n};\r\nconst App = () => {\r\n  const [currentView, setCurrentView] = useState('');\r\n  const [selectedCoordinates, setSelectedCoordinates] = useState({});\r\n\r\n  useEffect(() => {\r\n    if ('serviceWorker' in navigator) {\r\n      window.addEventListener('load', () => {\r\n        navigator.serviceWorker.register('/FahrlereAppReact/service-worker.js')\r\n          .then(registration => {\r\n            console.log('SW registered: ', registration);\r\n          })\r\n          .catch(registrationError => {\r\n            console.log('SW registration failed: ', registrationError);\r\n          });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleViewChange = (view) => {\r\n    setCurrentView(view);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setCurrentView('');\r\n  };\r\n\r\n  const handleSelectChange = (event, key) => {\r\n    setSelectedCoordinates(prevState => ({\r\n      ...prevState,\r\n      [key]: coordinates[key]\r\n    }));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {currentView === '' && (\r\n        <>\r\n          <button className=\"button\" onClick={() => handleViewChange('Schüler Daten')}>\r\n            Schüler Daten <span className=\"arrow\"></span>\r\n          </button>\r\n          \r\n          <button className=\"button\" onClick={() => handleViewChange('uebungsfahrt')}>\r\n            Übungsfahrt <span className=\"arrow\"></span>\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleViewChange('sonderfahrt')}>\r\n            Sonderfahrt <span className=\"arrow\"></span>\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleViewChange('vorpruefung')}>\r\n            Vorprüfung <span className=\"arrow\"></span>\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {currentView === 'Schüler Daten' && (\r\n        <div className=\"Schüler Daten-container\">\r\n          <div className=\"header\">\r\n          <button className=\"back-button\" onClick={handleBack}>\r\n  <svg className=\"back-arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M15 6l-6 6 6 6\" />\r\n  </svg>\r\n  Schüler Daten\r\n</button>\r\n            \r\n          </div>\r\n          <div className=\"label\">Anschrift</div>\r\n          <input className=\"input\" type=\"text\" placeholder=\"Anschrift\" />\r\n          \r\n          <div className=\"label\">Telefonnummer</div>\r\n          <input className=\"input\" type=\"text\" placeholder=\"Telefonnummer\" />\r\n\r\n          <div className=\"label\">Geburtsdatum</div>\r\n          <input className=\"input\" type=\"text\" placeholder=\"Geburtsdatum\" />\r\n\r\n          <div className=\"label\">Anlage/n</div>\r\n          <input className=\"input\" type=\"text\" placeholder=\"Anlage/n\" />\r\n\r\n          <label><input type= \"checkbox\"/> Sehhilfe: </label>\r\n\r\n          <div className='label'>Antrag gestellt am:</div>\r\n          <input className=\"input\" type= \"text\"placeholder='Antrag gestellt am:'/>\r\n          <div className='label'>Theorieprüfung bestanden am:</div>\r\n          <input className=\"input\" type= \"text\"placeholder='Theorieprüfung bestanden am:'/>\r\n        </div>\r\n      )}\r\n\r\n      {currentView === 'uebungsfahrt' && (\r\n        <div className=\"uebungsfahrt-container\">\r\n          <div className=\"header\">\r\n          <button className=\"back-button\" onClick={handleBack}>\r\n  <svg className=\"back-arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M15 6l-6 6 6 6\" />\r\n  </svg>\r\n  Übungsfahrt\r\n</button>\r\n\r\n          </div>\r\n          <label><input type=\"checkbox\" /> rechts</label>\r\n          <label><input type=\"checkbox\" /> links</label>\r\n          <label><input type=\"checkbox\" /> mehrspurig</label>\r\n          <label><input type=\"checkbox\" /> Radweg</label>\r\n          <label><input type=\"checkbox\" /> Sonderstreifen</label>\r\n          <label><input type=\"checkbox\" /> Straßenbahnen</label>\r\n          <label><input type=\"checkbox\" /> Einbahnstraßen</label>\r\n        </div>\r\n      )}\r\n\r\n      {currentView === 'sonderfahrt' && (\r\n        <div className=\"sonderfahrt-container\">\r\n          <div className=\"header\">\r\n            <button className=\"back-button\" onClick={handleBack}>\r\n              <svg className=\"back-arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M15 6l-6 6 6 6\" />\r\n              </svg>\r\n              Sonderfahrt\r\n            </button>\r\n          </div>\r\n          <label><input type=\"checkbox\" /> Beobachtung/Spiegel</label>\r\n          <label><input type=\"checkbox\" /> Verkehrszeichen</label>\r\n          <label><input type=\"checkbox\" /> Kreuzungen/Einmündungen</label>\r\n          <label><input type=\"checkbox\" /> Kurven</label>\r\n          <label><input type=\"checkbox\" /> Steigungen</label>\r\n          <label><input type=\"checkbox\" /> Gefälle</label>\r\n          <label><input type=\"checkbox\" /> Alleen</label>\r\n          <label><input type=\"checkbox\" /> Überholen</label>\r\n          <label><input type=\"checkbox\" /> Ligenbleiben + Absichern</label>\r\n          <label><input type=\"checkbox\" /> Einfahren in Ortschaften</label>\r\n          <label><input type=\"checkbox\" /> Fußgänger</label>\r\n          <label><input type=\"checkbox\" /> Wild/Tiere</label>\r\n          <label><input type=\"checkbox\" /> Leistungssgrenze</label>\r\n          <label><input type=\"checkbox\" /> Orientierung</label>\r\n          <label><input type=\"checkbox\" /> Ablenkung (z.B. Radio)</label>\r\n        </div>\r\n      )}\r\n\r\n{currentView === 'vorpruefung' && (\r\n        <div className=\"vorpruefung-container\">\r\n          <div className=\"header\">\r\n            <button className=\"back-button\" onClick={handleBack}>\r\n              <div className=\"back-circle\">\r\n                <svg className=\"back-arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M15 6l-6 6 6 6\" />\r\n                </svg>\r\n              </div>\r\n              <span className=\"back-text\">Vorprüfung</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"dropdown-list\">\r\n            {Object.keys(coordinates).map(key => (\r\n              <div className=\"dropdown-item\" key={key}>\r\n                <label>\r\n                  {key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}\r\n                  <select onChange={(e) => handleSelectChange(e, key)}>\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"+\">+</option>\r\n                    <option value=\"++\">++</option>\r\n                    <option value=\"-\">-</option>\r\n                    <option value=\"rote X\">rote X</option>\r\n                  </select>\r\n                </label>\r\n                {selectedCoordinates[key] && (\r\n                  <span className=\"info\">\r\n                    <i className=\"info-icon\">i</i>\r\n                    <span className=\"info-text\">\r\n                      Lat: {selectedCoordinates[key].lat}, Lng: {selectedCoordinates[key].lng}\r\n                    </span>\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <div className=\"dropdown-item\">\r\n              <label>\r\n                Geschwindigkeitsanpassung\r\n                <select>\r\n                  <option value=\"30\">30</option>\r\n                  <option value=\"70\">70</option>\r\n                  <option value=\"100\">100</option>\r\n                </select>\r\n                <select>\r\n                  <option value=\"+\">+</option>\r\n                  <option value=\"++\">++</option>\r\n                  <option value=\"-\">-</option>\r\n                  <option value=\"rote X\">X</option>\r\n                </select>\r\n              </label>\r\n              <span className=\"info\">\r\n              <i class=\"bi bi-info-circle\"></i>\r\n                <span className=\"info-text\">\r\n                  Lat: {coordinates.geschwindigkeitsanpassung.lat}, Lng: {coordinates.geschwindigkeitsanpassung.lng}\r\n                </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}